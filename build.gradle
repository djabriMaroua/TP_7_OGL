import com.alessio.slack.model.Message

plugins {
    id 'java'
    id 'jacoco'
    id("com.github.spacialcircumstances.gradle-cucumber-reporting") version "0.1.25"
    id("io.github.oleksiiparf.slack-webhook") version "1.0.0"
    id("de.zebrajaeger.sendMail") version "0.2.2"
    id("org.sonarqube") version "4.4.0.3356"



}

group = 'com.example'
version = '1.0'
apply plugin: 'maven-publish'

group = 'com.my-project'
version = '0.1-SNAPSHOT'
sonar {
    properties {
        property "sonar.projectKey", "com.my-project:untitled3" // Replace with your actual project key

        property "sonar.host.url", "http://197.140.142.82:9000"
        property "sonar.login", "773e2b8a4cf671fd3d3b632016c2a50481fb75a1"
        property "sonar.sources", "src/main/java"// Replace with the token or username/password
        property "sonar.skipCompile", "true" // Skip implicit compilation
    }
}



publishing {
    repositories {
        maven {
            url 'https://mymavenrepo.com/repo/uW1ml5rCuyPDeACXAsO1/'
            credentials {
                username 'myMavenRepo'
                password 'maroua2003'
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
repositories {
    mavenCentral()
}


dependencies {
    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.12'

}


cucumberReports {
    outputDir = file('build/reports/cucumber')
    buildId = '0'
    reports = files('reports/example-report.json')
}

test {
    finalizedBy jacocoTestReport
}

test {
    finalizedBy 'sonarqube' // Executes SonarQube after the test task
}
task cucumber(type: Test) {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                '--plugin', 'pretty',
                '--plugin', 'html:build/reports/cucumber.html',
                '--glue', 'com.example', // Remplacez par le package de vos step definitions
                'src/test/resources'    // RÃ©pertoire des fichiers .feature
            ]
        }
    }
}
// SonarQube should still depend on test
tasks.sonarqube.dependsOn test

slack {
    publishedPlugin {
        webHook = "https://hooks.slack.com/services/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"
        attachment {
            fallback = "New version successfully published."
            pretext = "New version successfully published."
            color = "good"
            field {
                title = "Module"
                value = project.name
                shortValue = true
            }
            field {
                title = "Version"
                value = project.version
                shortValue = true
            }
        }
    }
    builtSucceed {
        webHook = "https://hooks.slack.com/services/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"
        attachment {
            fallback = "Project successfully built."
            pretext = "Project successfully built."
            field {
                title = "Module"
                value = project.name
                shortValue = true
            }
            field {
                title = "Version"
                value = project.version
                shortValue = true
            }
        }
    }
}



