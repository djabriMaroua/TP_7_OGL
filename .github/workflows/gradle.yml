name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactive le clone superficiel pour une meilleure analyse

      # Étape 2 : Rendre gradlew exécutable
      - name: Make gradlew executable
        run: chmod +x gradlew

      # Étape 3 : Configuration de Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Vous pouvez choisir une autre distribution si nécessaire

      # Étape 4 : Cache des packages SonarQube
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Étape 5 : Cache des packages Gradle
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      # Étape 6 : Exécution des tests unitaires
      - name: Run unit tests
        run: ./gradlew test

      # Étape 7 : Analyse SonarQube
      - name: Run SonarQube analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Nécessaire pour les informations sur les PR
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube

      # Étape 8 : Vérification de la Quality Gate
      - name: Check Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1.7
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Étape 9 : Génération des rapports Cucumber
      - name: Generate Cucumber reports
        run: ./gradlew cucumber

      # Étape 10 : Archivage des artefacts
      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test/

      - name: Archive JAR and documentation
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/libs/*.jar
            build/docs/javadoc/
